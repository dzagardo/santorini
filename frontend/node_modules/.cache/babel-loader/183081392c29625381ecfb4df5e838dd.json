{"ast":null,"code":"var _jsxFileName = \"/Users/davidzagardo/Dropbox/My Mac (Davids-MacBook-Pro.local)/Desktop/INTELLIJ/17514hw3/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Handlebars from \"handlebars\";\nimport { Component } from 'react';\nimport './App.css';\nimport Box from '@mui/material/Box';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Checkbox from '@mui/material/Checkbox';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldHref = \"http://localhost:3000\";\nvar turn = 0; // drop down with godcard select options\n// when game: start\n// or: first move\n// ---> deactivate the dropdowns\n\nfunction CheckboxesGroup() {\n  _s();\n\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false\n  }); // const handleChange = (event) => {\n  //   setState({\n  //     ...state,\n  //     [event.target.name]: event.target.checked,\n  //   });\n  // };\n\n  const {\n    gilad,\n    jason,\n    antoine\n  } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 2;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 3\n      },\n      component: \"fieldset\",\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Assign responsibility\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: gilad,\n            name: \"gilad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this),\n          label: \"Gilad Gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: jason,\n            name: \"jason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this),\n          label: \"Jason Killian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: antoine,\n            name: \"antoine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this),\n          label: \"Antoine Llorca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"Be careful\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      error: error,\n      component: \"fieldset\",\n      sx: {\n        m: 3\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Pick two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: gilad,\n            name: \"gilad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this),\n          label: \"Gilad Gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: jason,\n            name: \"jason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this),\n          label: \"Jason Killian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: antoine,\n            name: \"antoine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this),\n          label: \"Antoine Llorca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"You can display an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxesGroup, \"1yrIq0OlL3RoOx8/qDAzd/ZVUaY=\");\n\n_c = CheckboxesGroup;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: [{\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=0&y=0&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=1&y=0&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=2&y=0&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=3&y=0&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=4&y=0&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=0&y=1&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=1&y=1&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=2&y=1&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=3&y=1&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=4&y=1&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=0&y=2&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=1&y=2&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=2&y=2&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=3&y=2&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=4&y=2&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=0&y=3&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=1&y=3&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=2&y=3&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=3&y=3&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=4&y=3&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=0&y=4&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=1&y=4&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=2&y=4&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=3&y=4&w=\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/play?x=4&y=4&w=\",\n        image: \"\"\n      }],\n      template: this.loadTemplate(),\n      instructions: \"It is Player 0's turn\",\n      image: \"\"\n    };\n  } // have cells be move or build with correct params\n  // those methods return the json obj of board\n  // update ui with convertToCell\n\n\n  loadTemplate() {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src === null || src === void 0 ? void 0 : src.innerHTML, {});\n  }\n\n  convertToCell(p) {\n    // console.log(p);\n    const newCells = [];\n\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      for (var j = 0; j < p[\"cells\"][i].length; j++) {\n        var c = {\n          text: p[\"cells\"][i][j][\"text\"],\n          worker: p[\"cells\"][i][j][\"worker\"],\n          link: p[\"cells\"][i][j][\"link\"],\n          image: p[\"cells\"][i][j][\"image\"]\n        };\n        newCells.push(c);\n      }\n    }\n\n    return newCells;\n  }\n\n  getTurn(p) {\n    return p[\"turn\"];\n  }\n\n  getWinner(p) {\n    return p[\"winner\"];\n  }\n\n  getInstr(turn, winner) {\n    if (winner === undefined) return \"It is Player \" + turn + \"'s turn\";else return \"Player \" + winner + \" wins!\";\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: newCells,\n      instructions: \"It is Player 0's turn\"\n    });\n  }\n\n  async play(url) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async build(url) {\n    const href = \"build?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async undo() {\n    const response = await fetch(\"undo\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async switch() {\n    if (window.location.href === \"http://localhost:3000/newgame\" && oldHref !== window.location.href) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" && oldHref !== window.location.href) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/build\" && oldHref !== window.location.href) {\n      this.build(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/undo\" && oldHref !== window.location.href) {\n      this.undo();\n      oldHref = window.location.href;\n    }\n  }\n\n  render() {\n    this.switch();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.template({\n            cells: this.state.cells,\n            instructions: this.state.instructions,\n            image: this.state.image\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxesGroup\");","map":{"version":3,"sources":["/Users/davidzagardo/Dropbox/My Mac (Davids-MacBook-Pro.local)/Desktop/INTELLIJ/17514hw3/frontend/src/App.tsx"],"names":["Handlebars","Component","Box","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","React","oldHref","turn","CheckboxesGroup","state","setState","useState","gilad","jason","antoine","error","filter","v","length","display","m","App","constructor","props","cells","text","worker","link","image","template","loadTemplate","instructions","src","document","getElementById","compile","innerHTML","convertToCell","p","newCells","i","j","c","push","getTurn","getWinner","getInstr","winner","undefined","newGame","response","fetch","json","play","url","href","split","instr","build","undo","switch","window","location","render","__html"],"mappings":"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","sourcesContent":["import Handlebars from \"handlebars\"\nimport { Component } from 'react'\nimport './App.css'\nimport Box from '@mui/material/Box';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Checkbox from '@mui/material/Checkbox';\nimport React from \"react\";\n\nvar oldHref = \"http://localhost:3000\"\nvar turn = 0\n\n// drop down with godcard select options\n// when game: start\n// or: first move\n// ---> deactivate the dropdowns\n\nfunction CheckboxesGroup() {\n  const [state, setState] = React.useState({\n    gilad: true,\n    jason: false,\n    antoine: false,\n  });\n\n  // const handleChange = (event) => {\n  //   setState({\n  //     ...state,\n  //     [event.target.name]: event.target.checked,\n  //   });\n  // };\n\n  const { gilad, jason, antoine } = state;\n  const error = [gilad, jason, antoine].filter((v) => v).length !== 2;\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n        <FormLabel component=\"legend\">Assign responsibility</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox checked={gilad} name=\"gilad\" />\n            }\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={jason} name=\"jason\" />\n            }\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} name=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>Be careful</FormHelperText>\n      </FormControl>\n      <FormControl\n        required\n        error={error}\n        component=\"fieldset\"\n        sx={{ m: 3 }}\n        variant=\"standard\"\n      >\n        <FormLabel component=\"legend\">Pick two</FormLabel>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox checked={gilad} name=\"gilad\" />\n            }\n            label=\"Gilad Gray\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={jason} name=\"jason\" />\n            }\n            label=\"Jason Killian\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox checked={antoine} name=\"antoine\" />\n            }\n            label=\"Antoine Llorca\"\n          />\n        </FormGroup>\n        <FormHelperText>You can display an error</FormHelperText>\n      </FormControl>\n    </Box>\n  );\n}\n\ninterface Cell {\n  text: String;\n  worker: String;\n  link: String;\n  image: String;\n}\n\ninterface Cells {\n  cells: Array<Cell>,\n  template: HandlebarsTemplateDelegate<any>,\n  instructions: String\n  image: String\n}\n\ninterface Props {\n}\n\nclass App extends Component<Props, Cells> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cells: [\n        { text: \"\", worker: \"\", link: \"/play?x=0&y=0&w=\", image: \"\" },\n        { text: \"\", worker: \"\", link: \"/play?x=1&y=0&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=2&y=0&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=3&y=0&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=4&y=0&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=0&y=1&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=1&y=1&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=2&y=1&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=3&y=1&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=4&y=1&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=0&y=2&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=1&y=2&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=2&y=2&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=3&y=2&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=4&y=2&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=0&y=3&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=1&y=3&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=2&y=3&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=3&y=3&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=4&y=3&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=0&y=4&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=1&y=4&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=2&y=4&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=3&y=4&w=\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/play?x=4&y=4&w=\", image: \"\"  },\n      ],\n      template: this.loadTemplate(),\n      instructions: \"It is Player 0's turn\",\n      image: \"\"\n    };\n  }\n\n// have cells be move or build with correct params\n// those methods return the json obj of board\n// update ui with convertToCell\n\n  loadTemplate (): HandlebarsTemplateDelegate<any> {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src?.innerHTML, {});\n  }\n\n  convertToCell(p: any): Array<Cell> {\n    // console.log(p);\n    const newCells: Array<Cell> = [];\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      for (var j = 0; j < p[\"cells\"][i].length; j++) {\n        var c: Cell = {\n          text: p[\"cells\"][i][j][\"text\"],\n          worker: p[\"cells\"][i][j][\"worker\"],\n          link: p[\"cells\"][i][j][\"link\"],\n          image: p[\"cells\"][i][j][\"image\"],\n        };\n        \n        newCells.push(c);\n      }\n    }\n\n    return newCells;\n  }\n\n  getTurn(p: any): String {\n    return p[\"turn\"]\n  }\n\n  getWinner(p: any): String | undefined {\n    return p[\"winner\"]\n  }\n\n  getInstr(turn: String, winner: String | undefined) {\n    if (winner === undefined) return \"It is Player \" + turn + \"'s turn\"\n    else return \"Player \" + winner + \" wins!\"\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    this.setState({ cells: newCells, instructions: \"It is Player 0's turn\" });\n  }\n\n  async play(url: String) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({ cells: newCells, instructions: instr, image: \"p\" + turn + \".png\" })\n  }\n\n  async build(url: String) {\n    const href = \"build?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({ cells: newCells, instructions: instr, image: \"p\" + turn + \".png\" })\n  }\n\n  async undo() {\n    const response = await fetch(\"undo\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, image: \"p\" + turn + \".png\" })\n  }\n\n  async switch() {\n    if (\n      window.location.href === \"http://localhost:3000/newgame\" &&\n      oldHref !== window.location.href\n    ) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" &&\n      oldHref !== window.location.href\n    ) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/build\" &&\n      oldHref !== window.location.href\n    ) {\n      this.build(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n      window.location.href === \"http://localhost:3000/undo\" &&\n      oldHref !== window.location.href\n    ) {\n      this.undo();\n      oldHref = window.location.href;\n    }\n  };\n\n  render() {\n    this.switch();\n    return (\n      <div className=\"App\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.template({ cells: this.state.cells, instructions: this.state.instructions, image: this.state.image }),\n          }}\n        />\n      </div>\n    )\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}