{"ast":null,"code":"var _jsxFileName = \"/Users/davidzagardo/Dropbox/My Mac (Davids-MacBook-Pro.local)/Desktop/INTELLIJ/17514hw3/frontend/src/App.tsx\";\nimport Handlebars from \"handlebars\";\nimport { Component } from 'react';\nimport './App.css';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar oldHref = \"http://localhost:3000\";\nvar turn = 0; // drop down with godcard select options\n// when game: start\n// or: first move\n// ---> deactivate the dropdowns\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cells: [{\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=0&y=0&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=1&y=0&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=2&y=0&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=3&y=0&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=4&y=0&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=0&y=1&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=1&y=1&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=2&y=1&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=3&y=1&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=4&y=1&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=0&y=2&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=1&y=2&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=2&y=2&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=3&y=2&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=4&y=2&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=0&y=3&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=1&y=3&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=2&y=3&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=3&y=3&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=4&y=3&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=0&y=4&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=1&y=4&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=2&y=4&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=3&y=4&w=P0W0\",\n        image: \"\"\n      }, {\n        text: \"\",\n        worker: \"\",\n        link: \"/gods?x=4&y=4&w=P0W0\",\n        image: \"\"\n      }],\n      template: this.loadTemplate(),\n      instructions: \"It is Player 0's turn\",\n      godOne: \"\",\n      godTwo: \"\",\n      image: \"\"\n    };\n  } // have cells be move or build with correct params\n  // those methods return the json obj of board\n  // update ui with convertToCell\n\n\n  loadTemplate() {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src === null || src === void 0 ? void 0 : src.innerHTML, {});\n  }\n\n  convertToCell(p) {\n    // console.log(p);\n    const newCells = [];\n\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      for (var j = 0; j < p[\"cells\"][i].length; j++) {\n        var c = {\n          text: p[\"cells\"][i][j][\"text\"],\n          worker: p[\"cells\"][i][j][\"worker\"],\n          link: p[\"cells\"][i][j][\"link\"],\n          image: p[\"cells\"][i][j][\"image\"]\n        };\n        newCells.push(c);\n      }\n    }\n\n    return newCells;\n  }\n\n  getGodOne(p) {\n    return p[\"godOne\"];\n  }\n\n  getGodTwo(p) {\n    return p[\"godTwo\"];\n  }\n\n  getTurn(p) {\n    return p[\"turn\"];\n  }\n\n  getWinner(p) {\n    return p[\"winner\"];\n  }\n\n  getInstr(turn, winner) {\n    if (winner === undefined) return \"It is Player \" + turn + \"'s turn.\";else return \"Player \" + winner + \" wins!\";\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    this.setState({\n      cells: newCells,\n      instructions: \"It is Player 0's turn\"\n    });\n  }\n\n  async gods(url) {\n    const href = \"gods?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async play(url) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async build(url) {\n    const href = \"build?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async undo() {\n    const response = await fetch(\"undo\");\n    const json = await response.json();\n    const newCells = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({\n      cells: newCells,\n      instructions: instr,\n      image: \"p\" + turn + \".png\"\n    });\n  }\n\n  async switch() {\n    if (window.location.href === \"http://localhost:3000/newgame\" && oldHref !== window.location.href) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" && oldHref !== window.location.href) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/gods\" && oldHref !== window.location.href) {\n      this.gods(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href.split(\"?\")[0] === \"http://localhost:3000/build\" && oldHref !== window.location.href) {\n      this.build(window.location.href);\n      oldHref = window.location.href;\n    } else if (window.location.href === \"http://localhost:3000/undo\" && oldHref !== window.location.href) {\n      this.undo();\n      oldHref = window.location.href;\n    }\n  }\n\n  render() {\n    this.switch();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.template({\n            cells: this.state.cells,\n            instructions: this.state.instructions,\n            image: this.state.image\n          })\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/davidzagardo/Dropbox/My Mac (Davids-MacBook-Pro.local)/Desktop/INTELLIJ/17514hw3/frontend/src/App.tsx"],"names":["Handlebars","Component","React","oldHref","turn","App","constructor","props","state","cells","text","worker","link","image","template","loadTemplate","instructions","godOne","godTwo","src","document","getElementById","compile","innerHTML","convertToCell","p","newCells","i","length","j","c","push","getGodOne","getGodTwo","getTurn","getWinner","getInstr","winner","undefined","newGame","response","fetch","json","setState","gods","url","href","split","instr","play","build","undo","switch","window","location","render","__html"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAG,uBAAd;AACA,IAAIC,IAAI,GAAG,CAAX,C,CAEA;AACA;AACA;AACA;;AAqBA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA0C;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OADK,EAEL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAFK,EAGL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAHK,EAIL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAJK,EAKL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OALK,EAML;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OANK,EAOL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAPK,EAQL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OARK,EASL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OATK,EAUL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAVK,EAWL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAXK,EAYL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAZK,EAaL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAbK,EAcL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAdK,EAeL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAfK,EAgBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAhBK,EAiBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAjBK,EAkBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAlBK,EAmBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAnBK,EAoBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OApBK,EAqBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OArBK,EAsBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAtBK,EAuBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAvBK,EAwBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAxBK,EAyBL;AAAEH,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,MAAM,EAAE,EAApB;AAAwBC,QAAAA,IAAI,EAAE,sBAA9B;AAAsDC,QAAAA,KAAK,EAAE;AAA7D,OAzBK,CADI;AA4BXC,MAAAA,QAAQ,EAAE,KAAKC,YAAL,EA5BC;AA6BXC,MAAAA,YAAY,EAAE,uBA7BH;AA8BXC,MAAAA,MAAM,EAAE,EA9BG;AA+BXC,MAAAA,MAAM,EAAE,EA/BG;AAgCXL,MAAAA,KAAK,EAAE;AAhCI,KAAb;AAkCD,GArCuC,CAuC1C;AACA;AACA;;;AAEEE,EAAAA,YAAY,GAAqC;AAC/C,UAAMI,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAZ;AACA,WAAOrB,UAAU,CAACsB,OAAX,CAAmBH,GAAnB,aAAmBA,GAAnB,uBAAmBA,GAAG,CAAEI,SAAxB,EAAmC,EAAnC,CAAP;AACD;;AAEDC,EAAAA,aAAa,CAACC,CAAD,EAAsB;AACjC;AACA,UAAMC,QAAqB,GAAG,EAA9B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAAC,OAAD,CAAD,CAAWG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,CAAC,CAAC,OAAD,CAAD,CAAWE,CAAX,EAAcC,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC7C,YAAIC,CAAO,GAAG;AACZpB,UAAAA,IAAI,EAAEe,CAAC,CAAC,OAAD,CAAD,CAAWE,CAAX,EAAcE,CAAd,EAAiB,MAAjB,CADM;AAEZlB,UAAAA,MAAM,EAAEc,CAAC,CAAC,OAAD,CAAD,CAAWE,CAAX,EAAcE,CAAd,EAAiB,QAAjB,CAFI;AAGZjB,UAAAA,IAAI,EAAEa,CAAC,CAAC,OAAD,CAAD,CAAWE,CAAX,EAAcE,CAAd,EAAiB,MAAjB,CAHM;AAIZhB,UAAAA,KAAK,EAAEY,CAAC,CAAC,OAAD,CAAD,CAAWE,CAAX,EAAcE,CAAd,EAAiB,OAAjB;AAJK,SAAd;AAOAH,QAAAA,QAAQ,CAACK,IAAT,CAAcD,CAAd;AACD;AACF;;AAED,WAAOJ,QAAP;AACD;;AAEDM,EAAAA,SAAS,CAACP,CAAD,EAAiB;AACxB,WAAOA,CAAC,CAAC,QAAD,CAAR;AACD;;AAEDQ,EAAAA,SAAS,CAACR,CAAD,EAAiB;AACxB,WAAOA,CAAC,CAAC,QAAD,CAAR;AACD;;AAEDS,EAAAA,OAAO,CAACT,CAAD,EAAiB;AACtB,WAAOA,CAAC,CAAC,MAAD,CAAR;AACD;;AAEDU,EAAAA,SAAS,CAACV,CAAD,EAA6B;AACpC,WAAOA,CAAC,CAAC,QAAD,CAAR;AACD;;AAEDW,EAAAA,QAAQ,CAAChC,IAAD,EAAeiC,MAAf,EAA2C;AACjD,QAAIA,MAAM,KAAKC,SAAf,EAA0B,OAAO,kBAAkBlC,IAAlB,GAAyB,UAAhC,CAA1B,KACK,OAAO,YAAYiC,MAAZ,GAAqB,QAA5B;AACN;;AAEY,QAAPE,OAAO,GAAG;AACd,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,SAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAMhB,QAAqB,GAAG,KAAKF,aAAL,CAAmBkB,IAAnB,CAA9B;AACA,SAAKC,QAAL,CAAc;AAAElC,MAAAA,KAAK,EAAEiB,QAAT;AAAmBV,MAAAA,YAAY,EAAE;AAAjC,KAAd;AACD;;AAES,QAAJ4B,IAAI,CAACC,GAAD,EAAc;AACtB,UAAMC,IAAI,GAAG,UAAUD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAvB;AACA,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACK,IAAD,CAA5B;AACA,UAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAMhB,QAAqB,GAAG,KAAKF,aAAL,CAAmBkB,IAAnB,CAA9B;AACA,UAAMtC,IAAI,GAAG,KAAK8B,OAAL,CAAaQ,IAAb,CAAb;AACA,UAAML,MAAM,GAAG,KAAKF,SAAL,CAAeO,IAAf,CAAf;AACA,UAAMM,KAAK,GAAG,KAAKZ,QAAL,CAAchC,IAAd,EAAoBiC,MAApB,CAAd;AACA,SAAKM,QAAL,CAAc;AAAClC,MAAAA,KAAK,EAAEiB,QAAR;AAAkBV,MAAAA,YAAY,EAAEgC,KAAhC;AAAuCnC,MAAAA,KAAK,EAAE,MAAMT,IAAN,GAAa;AAA3D,KAAd;AACD;;AAES,QAAJ6C,IAAI,CAACJ,GAAD,EAAc;AACtB,UAAMC,IAAI,GAAG,UAAUD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAvB;AACA,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACK,IAAD,CAA5B;AACA,UAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAMhB,QAAqB,GAAG,KAAKF,aAAL,CAAmBkB,IAAnB,CAA9B;AACA,UAAMtC,IAAI,GAAG,KAAK8B,OAAL,CAAaQ,IAAb,CAAb;AACA,UAAML,MAAM,GAAG,KAAKF,SAAL,CAAeO,IAAf,CAAf;AACA,UAAMM,KAAK,GAAG,KAAKZ,QAAL,CAAchC,IAAd,EAAoBiC,MAApB,CAAd;AACA,SAAKM,QAAL,CAAc;AAAElC,MAAAA,KAAK,EAAEiB,QAAT;AAAmBV,MAAAA,YAAY,EAAEgC,KAAjC;AAAwCnC,MAAAA,KAAK,EAAE,MAAMT,IAAN,GAAa;AAA5D,KAAd;AACD;;AAEU,QAAL8C,KAAK,CAACL,GAAD,EAAc;AACvB,UAAMC,IAAI,GAAG,WAAWD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAxB;AACA,UAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACK,IAAD,CAA5B;AACA,UAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAMhB,QAAqB,GAAG,KAAKF,aAAL,CAAmBkB,IAAnB,CAA9B;AACA,UAAMtC,IAAI,GAAG,KAAK8B,OAAL,CAAaQ,IAAb,CAAb;AACA,UAAML,MAAM,GAAG,KAAKF,SAAL,CAAeO,IAAf,CAAf;AACA,UAAMM,KAAK,GAAG,KAAKZ,QAAL,CAAchC,IAAd,EAAoBiC,MAApB,CAAd;AACA,SAAKM,QAAL,CAAc;AAAElC,MAAAA,KAAK,EAAEiB,QAAT;AAAmBV,MAAAA,YAAY,EAAEgC,KAAjC;AAAwCnC,MAAAA,KAAK,EAAE,MAAMT,IAAN,GAAa;AAA5D,KAAd;AACD;;AAES,QAAJ+C,IAAI,GAAG;AACX,UAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,UAAMhB,QAAqB,GAAG,KAAKF,aAAL,CAAmBkB,IAAnB,CAA9B;AACA,UAAMtC,IAAI,GAAG,KAAK8B,OAAL,CAAaQ,IAAb,CAAb;AACA,UAAML,MAAM,GAAG,KAAKF,SAAL,CAAeO,IAAf,CAAf;AACA,UAAMM,KAAK,GAAG,KAAKZ,QAAL,CAAchC,IAAd,EAAoBiC,MAApB,CAAd;AACA,SAAKM,QAAL,CAAc;AAAElC,MAAAA,KAAK,EAAEiB,QAAT;AAAmBV,MAAAA,YAAY,EAAEgC,KAAjC;AAAwCnC,MAAAA,KAAK,EAAE,MAAMT,IAAN,GAAa;AAA5D,KAAd;AACD;;AAEW,QAANgD,MAAM,GAAG;AACb,QACEC,MAAM,CAACC,QAAP,CAAgBR,IAAhB,KAAyB,+BAAzB,IACA3C,OAAO,KAAKkD,MAAM,CAACC,QAAP,CAAgBR,IAF9B,EAGE;AACA,WAAKP,OAAL;AACApC,MAAAA,OAAO,GAAGkD,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACD,KAND,MAMO,IACLO,MAAM,CAACC,QAAP,CAAgBR,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,MAAuC,4BAAvC,IACA5C,OAAO,KAAKkD,MAAM,CAACC,QAAP,CAAgBR,IAFvB,EAGL;AACA,WAAKG,IAAL,CAAUI,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACA3C,MAAAA,OAAO,GAAGkD,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACD,KANM,MAMA,IACLO,MAAM,CAACC,QAAP,CAAgBR,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,MAAuC,4BAAvC,IACA5C,OAAO,KAAKkD,MAAM,CAACC,QAAP,CAAgBR,IAFvB,EAGL;AACA,WAAKF,IAAL,CAAUS,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACA3C,MAAAA,OAAO,GAAGkD,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACD,KANM,MAMA,IACLO,MAAM,CAACC,QAAP,CAAgBR,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,MAAuC,6BAAvC,IACA5C,OAAO,KAAKkD,MAAM,CAACC,QAAP,CAAgBR,IAFvB,EAGL;AACA,WAAKI,KAAL,CAAWG,MAAM,CAACC,QAAP,CAAgBR,IAA3B;AACA3C,MAAAA,OAAO,GAAGkD,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACD,KANM,MAMA,IACLO,MAAM,CAACC,QAAP,CAAgBR,IAAhB,KAAyB,4BAAzB,IACA3C,OAAO,KAAKkD,MAAM,CAACC,QAAP,CAAgBR,IAFvB,EAGL;AACA,WAAKK,IAAL;AACAhD,MAAAA,OAAO,GAAGkD,MAAM,CAACC,QAAP,CAAgBR,IAA1B;AACD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,SAAKH,MAAL;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AACE,QAAA,uBAAuB,EAAE;AACvBI,UAAAA,MAAM,EAAE,KAAKhD,KAAL,CAAWM,QAAX,CAAoB;AAAEL,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAApB;AAA2BO,YAAAA,YAAY,EAAE,KAAKR,KAAL,CAAWQ,YAApD;AAAkEH,YAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK;AAApF,WAApB;AADe;AAD3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA5LuC;;AA6LzC;AAED,eAAeR,GAAf","sourcesContent":["import Handlebars from \"handlebars\"\nimport { Component } from 'react'\nimport './App.css'\nimport Box from '@mui/material/Box';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Checkbox from '@mui/material/Checkbox';\nimport React from \"react\";\n\nvar oldHref = \"http://localhost:3000\"\nvar turn = 0\n\n// drop down with godcard select options\n// when game: start\n// or: first move\n// ---> deactivate the dropdowns\n\ninterface Cell {\n  text: String;\n  worker: String;\n  link: String;\n  image: String;\n}\n\ninterface Cells {\n  cells: Array<Cell>,\n  template: HandlebarsTemplateDelegate<any>,\n  instructions: String\n  godOne: String\n  godTwo: String\n  image: String\n}\n\ninterface Props {\n}\n\nclass App extends Component<Props, Cells> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      cells: [\n        { text: \"\", worker: \"\", link: \"/gods?x=0&y=0&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=1&y=0&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=2&y=0&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=3&y=0&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=4&y=0&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=0&y=1&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=1&y=1&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=2&y=1&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=3&y=1&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=4&y=1&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=0&y=2&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=1&y=2&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=2&y=2&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=3&y=2&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=4&y=2&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=0&y=3&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=1&y=3&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=2&y=3&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=3&y=3&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=4&y=3&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=0&y=4&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=1&y=4&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=2&y=4&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=3&y=4&w=P0W0\", image: \"\"  },\n        { text: \"\", worker: \"\", link: \"/gods?x=4&y=4&w=P0W0\", image: \"\"  },\n      ],\n      template: this.loadTemplate(),\n      instructions: \"It is Player 0's turn\",\n      godOne: \"\",\n      godTwo: \"\",\n      image: \"\"\n    };\n  }\n\n// have cells be move or build with correct params\n// those methods return the json obj of board\n// update ui with convertToCell\n\n  loadTemplate (): HandlebarsTemplateDelegate<any> {\n    const src = document.getElementById(\"handlebars\");\n    return Handlebars.compile(src?.innerHTML, {});\n  }\n\n  convertToCell(p: any): Array<Cell> {\n    // console.log(p);\n    const newCells: Array<Cell> = [];\n    for (var i = 0; i < p[\"cells\"].length; i++) {\n      for (var j = 0; j < p[\"cells\"][i].length; j++) {\n        var c: Cell = {\n          text: p[\"cells\"][i][j][\"text\"],\n          worker: p[\"cells\"][i][j][\"worker\"],\n          link: p[\"cells\"][i][j][\"link\"],\n          image: p[\"cells\"][i][j][\"image\"],\n        };\n        \n        newCells.push(c);\n      }\n    }\n\n    return newCells;\n  }\n\n  getGodOne(p: any): String {\n    return p[\"godOne\"]\n  }\n\n  getGodTwo(p: any): String {\n    return p[\"godTwo\"]\n  }\n\n  getTurn(p: any): String {\n    return p[\"turn\"]\n  }\n\n  getWinner(p: any): String | undefined {\n    return p[\"winner\"]\n  }\n\n  getInstr(turn: String, winner: String | undefined) {\n    if (winner === undefined) return \"It is Player \" + turn + \"'s turn.\"\n    else return \"Player \" + winner + \" wins!\"\n  }\n\n  async newGame() {\n    const response = await fetch(\"newgame\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    this.setState({ cells: newCells, instructions: \"It is Player 0's turn\" });\n  }\n\n  async gods(url: String) {\n    const href = \"gods?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({cells: newCells, instructions: instr, image: \"p\" + turn + \".png\"})\n  }\n\n  async play(url: String) {\n    const href = \"play?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({ cells: newCells, instructions: instr, image: \"p\" + turn + \".png\" })\n  }\n\n  async build(url: String) {\n    const href = \"build?\" + url.split(\"?\")[1];\n    const response = await fetch(href);\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json);\n    const winner = this.getWinner(json);\n    const instr = this.getInstr(turn, winner);\n    this.setState({ cells: newCells, instructions: instr, image: \"p\" + turn + \".png\" })\n  }\n\n  async undo() {\n    const response = await fetch(\"undo\");\n    const json = await response.json();\n\n    const newCells: Array<Cell> = this.convertToCell(json);\n    const turn = this.getTurn(json)\n    const winner = this.getWinner(json)\n    const instr = this.getInstr(turn, winner)\n    this.setState({ cells: newCells, instructions: instr, image: \"p\" + turn + \".png\" })\n  }\n\n  async switch() {\n    if (\n      window.location.href === \"http://localhost:3000/newgame\" &&\n      oldHref !== window.location.href\n    ) {\n      this.newGame();\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/play\" &&\n      oldHref !== window.location.href\n    ) {\n      this.play(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/gods\" &&\n      oldHref !== window.location.href\n    ) {\n      this.gods(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n      window.location.href.split(\"?\")[0] === \"http://localhost:3000/build\" &&\n      oldHref !== window.location.href\n    ) {\n      this.build(window.location.href);\n      oldHref = window.location.href;\n    } else if (\n      window.location.href === \"http://localhost:3000/undo\" &&\n      oldHref !== window.location.href\n    ) {\n      this.undo();\n      oldHref = window.location.href;\n    }\n  };\n\n  render() {\n    this.switch();\n    return (\n      <div className=\"App\">\n        <div\n          dangerouslySetInnerHTML={{\n            __html: this.state.template({ cells: this.state.cells, instructions: this.state.instructions, image: this.state.image }),\n          }}\n        />\n      </div>\n    )\n  };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}